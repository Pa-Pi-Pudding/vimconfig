#github.comのリポジトリを指定するだけで良い

[[plugins]]
repo   = 'Shougo/unite.vim'

# unite.vim を読み込んだら一緒に読み込む
[[plugins]]
repo      = 'Shougo/neomru.vim'
on_source = ['unite.vim']

[[plugins]]
repo = "davidhalter/jedi-vim"
on_ft = ['python']

[[plugins]]
repo = 'hynek/vim-python-pep8-indent'
on_ft = 'python'

#[[plugins]]
#repo = 'lambdalisue/vim-pyenv'
#depends = 'davidhalter/jedi-vim'
#on_ft = 'python'

[[plugins]]
repo = 'jmcantrell/vim-virtualenv'
on_ft = 'python'

[[plugins]]
repo = 'andviro/flake8-vim'
on_ft = 'python'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']

[[plugins]]
repo = 'rcmdnk/vim-markdown'
on_ft = ['md', 'markdown']

# 特定のファイルタイプで読み込む
[[plugins]]
repo  = 'Quramy/tsuquyomi'
on_ft = ['typescript']

# インサートモードに入ったら読み込む
[[plugins]]
repo = 'Shougo/neocomplcache.vim'
depends = 'context_filetype.vim'
if = "has('lua')"
on_i = 1
hook_add = '''
" neocomplcacheの設定
" Disable AutoComplPop.
let g:acp_enableAtStartup = 0

" Use neocomplcache.
let g:neocomplcache_enable_at_startup = 1

" Use smartcase.
let g:neocomplcache_enable_smart_case = 1

" Set minimum syntax keyword length.
let g:neocomplcache_min_syntax_length = 3
let g:neocomplcache_lock_buffer_name_pattern = '\*ku\*'

let g:neocomplcache_enable_camel_case_completion = 1
let g:neocomplcache_enable_underbar_completion = 1
'''

[[plugins]]
repo = 'shougo/neocomplcache-rsense.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
if = "has('nvim')"
on_i = 1
hook_source = '''
source ~/.config/nvim/plugins/deoplete.rc.vim
'''
# neosnippet----------------

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'
hool_source = '''
# Plugin key-mappings.
# Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

# SuperTab like snippets behavior.
# Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
#imap <expr><TAB>
# \ pumvisible() ? "\<C-n>" :
# \ neosnippet#expandable_or_jumpable() ?
# \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

# For conceal markers.
if has('conceal')
  set conceallevel=2 concealcursor=niv
endif
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

# rubyプラグイン
[[plugins]]
repo = 'tpope/vim-endwise'
on_ft = 'ruby'
